{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction DoctorregisterComponent_p_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.err);\n  }\n}\nconst _c0 = function () {\n  return {\n    exact: true\n  };\n};\nexport class DoctorregisterComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.name = '';\n    this.email = '';\n    this.password = '';\n    this.err = null;\n  }\n  checkMail(data) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(data);\n  }\n  save() {\n    const data = {\n      email: this.email,\n      name: this.name,\n      password: this.password,\n      role: 'Doctor'\n    };\n    if (this.name) {\n      if (this.checkMail(this.email)) {\n        if (this.password.length >= 5) {\n          this.http.post('http://localhost:1111/newdoctor', data).subscribe(response => {\n            console.log(response);\n            this.router.navigate(['/doctorlogin']);\n          }, error => {\n            console.error('Error:', error);\n          });\n        } else {\n          this.handleError('Enter a password with at least 5 characters');\n        }\n      } else {\n        this.handleError('Enter a proper email');\n      }\n    } else {\n      this.handleError('Enter a name');\n    }\n  }\n  hideSpam() {\n    this.err = null;\n  }\n  handleError(message) {\n    this.err = message;\n    setTimeout(() => this.hideSpam(), 1000);\n  }\n  static #_ = this.ɵfac = function DoctorregisterComponent_Factory(t) {\n    return new (t || DoctorregisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorregisterComponent,\n    selectors: [[\"app-doctorregister\"]],\n    decls: 29,\n    vars: 6,\n    consts: [[1, \"login-container\"], [1, \"login-form\"], [1, \"form\"], [\"routerLink\", \"\", \"routerLinkActive\", \"active-link\", 1, \"nav-link\", 3, \"routerLinkActiveOptions\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"32\", \"height\", \"32\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-house-door-fill\"], [\"d\", \"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5\"], [1, \"lcontainer\"], [1, \"login\"], [\"type\", \"text\", \"placeholder\", \"Enter name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"div1\"], [1, \"save\", 3, \"click\"], [\"routerLink\", \"/doctorlogin\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n    template: function DoctorregisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(4, \"svg\", 4);\n        i0.ɵɵelement(5, \"path\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"h1\");\n        i0.ɵɵtext(9, \"REGISTER\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorregisterComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorregisterComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorregisterComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function DoctorregisterComponent_Template_button_click_21_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(22, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"br\");\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"Already a user? \");\n        i0.ɵɵelementStart(26, \"a\", 13);\n        i0.ɵɵtext(27, \"Click Here\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(28, DoctorregisterComponent_p_28_Template, 2, 1, \"p\", 14);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(5, _c0));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.err);\n      }\n    },\n    dependencies: [i3.NgIf, i1.RouterLink, i1.RouterLinkActive, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 70:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(268:1) C:\\\\\\\\Users\\\\\\\\biswa\\\\\\\\Desktop\\\\\\\\New folder\\\\\\\\Hos-mean\\\\\\\\angular\\\\\\\\Angsh\\\\\\\\Angsh\\\\\\\\src\\\\\\\\app\\\\\\\\Doctor\\\\\\\\doctorregister\\\\\\\\doctorregister.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 266 | \\\\u001b[39m  padding\\\\u001b[33m:\\\\u001b[39m 0px 10px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 267 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 268 | \\\\u001b[39mer\\\\n \\\\u001b[90m     | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[70]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=doctorregister.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","err","DoctorregisterComponent","constructor","router","http","name","email","password","checkMail","data","emailRegex","test","save","role","length","post","subscribe","response","console","log","navigate","error","handleError","hideSpam","message","setTimeout","_","ɵɵdirectiveInject","i1","Router","i2","HttpClient","_2","selectors","decls","vars","consts","template","DoctorregisterComponent_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","ɵɵlistener","DoctorregisterComponent_Template_input_ngModelChange_12_listener","$event","DoctorregisterComponent_Template_input_ngModelChange_15_listener","DoctorregisterComponent_Template_input_ngModelChange_18_listener","DoctorregisterComponent_Template_button_click_21_listener","ɵɵtemplate","DoctorregisterComponent_p_28_Template","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\biswa\\Desktop\\New folder\\Hos-mean\\angular\\Angsh\\Angsh\\src\\app\\Doctor\\doctorregister\\doctorregister.component.ts","C:\\Users\\biswa\\Desktop\\New folder\\Hos-mean\\angular\\Angsh\\Angsh\\src\\app\\Doctor\\doctorregister\\doctorregister.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-doctorregister',\r\n  templateUrl: './doctorregister.component.html',\r\n  styleUrls: ['./doctorregister.component.css']\r\n})\r\nexport class DoctorregisterComponent {\r\n\r\n  name: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n  err: string | null = null;\r\n\r\n  constructor(private router: Router, private http: HttpClient) {}\r\n\r\n  checkMail(data: string): boolean {\r\n    const emailRegex: RegExp = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(data);\r\n  }\r\n\r\n  save(): void {\r\n    const data = {\r\n      email: this.email,\r\n      name: this.name,\r\n      password: this.password,\r\n      role: 'Doctor'\r\n    };\r\n\r\n    if (this.name) {\r\n      if (this.checkMail(this.email)) {\r\n        if (this.password.length >= 5) {\r\n          this.http.post('http://localhost:1111/newdoctor', data).subscribe(\r\n            (response) => {\r\n              console.log(response);\r\n              this.router.navigate(['/doctorlogin']);\r\n            },\r\n            (error) => {\r\n              console.error('Error:', error);\r\n            }\r\n          );\r\n        } else {\r\n          this.handleError('Enter a password with at least 5 characters');\r\n        }\r\n      } else {\r\n        this.handleError('Enter a proper email');\r\n      }\r\n    } else {\r\n      this.handleError('Enter a name');\r\n    }\r\n  }\r\n\r\n  hideSpam(): void {\r\n    this.err = null;\r\n  }\r\n\r\n  handleError(message: string): void {\r\n    this.err = message;\r\n    setTimeout(() => this.hideSpam(), 1000);\r\n  }\r\n}","\r\n\r\n<div class=\"login-container\">\r\n  <div class=\"login-form\">\r\n\r\n    <div class=\"form\">\r\n      <a\r\n      class=\"nav-link\"\r\n      routerLink=\"\"\r\n      routerLinkActive=\"active-link\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\"\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"32\"\r\n        height=\"32\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-house-door-fill\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path\r\n          d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5\"\r\n        />\r\n      </svg>\r\n    </a>\r\n<div class=\"lcontainer\">\r\n    <div class=\"login\">\r\n      <h1>REGISTER</h1>\r\n  \r\n      <p>Name</p>\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" placeholder=\"Enter name\" />\r\n  \r\n      <p>Email</p>\r\n      <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Enter email\" />\r\n  \r\n      <p>Password</p>\r\n      <input type=\"password\" class=\"form-control\"  [(ngModel)]=\"password\" placeholder=\"Enter Password\" />\r\n      <br>\r\n      <div class=\"div1\">\r\n        <button class=\"save\" (click)=\"save()\">Register</button><br>\r\n        <p>Already a user? <a routerLink=\"/doctorlogin\">Click Here</a></p>\r\n      </div>\r\n      <p *ngIf=\"err\" class=\"error\">{{ err }}</p>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}