{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DEEPIKA G/Desktop/HOS-MEAN/angular/Angsh/Angsh/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DoctorLoginComponent = class DoctorLoginComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.email = '';\n    this.password = '';\n    this.error = null;\n    this.userdetails = {\n      email: '',\n      password: ''\n    };\n  }\n  checkMail(data) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(data);\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const data = {\n        email: _this.email,\n        password: _this.password\n      };\n      if (_this.checkMail(_this.email) && _this.password.length >= 5) {\n        try {\n          const response = yield _this.http.post('http://localhost:1111/doctorlogin', data).toPromise();\n          _this.userdetails = response.doctor; // Update according to your response structure\n          if (_this.userdetails && _this.userdetails.email === _this.email && _this.userdetails.password === _this.password) {\n            // Store email in session storage upon successful login\n            sessionStorage.setItem('loggedInUserEmail', _this.email);\n            _this.router.navigate(['/docappointment']);\n          } else {\n            _this.handleError('Invalid email or password');\n          }\n        } catch (error) {\n          _this.handleError('An error occurred during login');\n          console.error('Error:', error);\n        }\n      } else {\n        _this.handleError('Enter a valid email address and a password with at least 5 characters');\n      }\n    })();\n  }\n  hideError() {\n    this.error = null;\n  }\n  handleError(message) {\n    this.error = message;\n    setTimeout(() => this.hideError(), 3000);\n  }\n};\nDoctorLoginComponent = __decorate([Component({\n  selector: 'app-doctorlogin',\n  templateUrl: './userlogin.component.html',\n  styleUrls: ['./doctorlogin.component.css']\n})], DoctorLoginComponent);","map":{"version":3,"names":["Component","DoctorLoginComponent","constructor","router","http","email","password","error","userdetails","checkMail","data","emailRegex","test","login","_this","_asyncToGenerator","length","response","post","toPromise","doctor","sessionStorage","setItem","navigate","handleError","console","hideError","message","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DEEPIKA G\\Desktop\\HOS-MEAN\\angular\\Angsh\\Angsh\\src\\app\\User\\userprofile\\userprofile.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-doctorlogin',\n  templateUrl: './userlogin.component.html',\n  styleUrls: ['./doctorlogin.component.css']\n})\nexport class DoctorLoginComponent {\n  email: string = '';\n  password: string = '';\n  error: string | null = null;\n  userdetails: any = { email: '', password: '' };\n\n  constructor(private router: Router, private http: HttpClient) {}\n\n  checkMail(data: string): boolean {\n    const emailRegex: RegExp = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(data);\n  }\n\n  async login(): Promise<void> {\n    const data = {\n      email: this.email,\n      password: this.password\n    };\n\n    if (this.checkMail(this.email) && this.password.length >= 5) {\n      try {\n        const response = await this.http.post<any>('http://localhost:1111/doctorlogin', data).toPromise();\n        this.userdetails = response.doctor; // Update according to your response structure\n\n        if (\n          this.userdetails &&\n          this.userdetails.email === this.email &&\n          this.userdetails.password === this.password\n        ) {\n          // Store email in session storage upon successful login\n          sessionStorage.setItem('loggedInUserEmail', this.email);\n\n          this.router.navigate(['/docappointment']);\n        } else {\n          this.handleError('Invalid email or password');\n        }\n      } catch (error) {\n        this.handleError('An error occurred during login');\n        console.error('Error:', error);\n      }\n    } else {\n      this.handleError('Enter a valid email address and a password with at least 5 characters');\n    }\n  }\n\n  hideError(): void {\n    this.error = null;\n  }\n\n  handleError(message: string): void {\n    this.error = message;\n    setTimeout(() => this.hideError(), 3000);\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM/BC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IALhD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAkB,IAAI;IAC3B,KAAAC,WAAW,GAAQ;MAAEH,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;EAEiB;EAE/DG,SAASA,CAACC,IAAY;IACpB,MAAMC,UAAU,GAAW,4BAA4B;IACvD,OAAOA,UAAU,CAACC,IAAI,CAACF,IAAI,CAAC;EAC9B;EAEMG,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT,MAAML,IAAI,GAAG;QACXL,KAAK,EAAES,KAAI,CAACT,KAAK;QACjBC,QAAQ,EAAEQ,KAAI,CAACR;OAChB;MAED,IAAIQ,KAAI,CAACL,SAAS,CAACK,KAAI,CAACT,KAAK,CAAC,IAAIS,KAAI,CAACR,QAAQ,CAACU,MAAM,IAAI,CAAC,EAAE;QAC3D,IAAI;UACF,MAAMC,QAAQ,SAASH,KAAI,CAACV,IAAI,CAACc,IAAI,CAAM,mCAAmC,EAAER,IAAI,CAAC,CAACS,SAAS,EAAE;UACjGL,KAAI,CAACN,WAAW,GAAGS,QAAQ,CAACG,MAAM,CAAC,CAAC;UAEpC,IACEN,KAAI,CAACN,WAAW,IAChBM,KAAI,CAACN,WAAW,CAACH,KAAK,KAAKS,KAAI,CAACT,KAAK,IACrCS,KAAI,CAACN,WAAW,CAACF,QAAQ,KAAKQ,KAAI,CAACR,QAAQ,EAC3C;YACA;YACAe,cAAc,CAACC,OAAO,CAAC,mBAAmB,EAAER,KAAI,CAACT,KAAK,CAAC;YAEvDS,KAAI,CAACX,MAAM,CAACoB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;WAC1C,MAAM;YACLT,KAAI,CAACU,WAAW,CAAC,2BAA2B,CAAC;;SAEhD,CAAC,OAAOjB,KAAK,EAAE;UACdO,KAAI,CAACU,WAAW,CAAC,gCAAgC,CAAC;UAClDC,OAAO,CAAClB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;;OAEjC,MAAM;QACLO,KAAI,CAACU,WAAW,CAAC,uEAAuE,CAAC;;IAC1F;EACH;EAEAE,SAASA,CAAA;IACP,IAAI,CAACnB,KAAK,GAAG,IAAI;EACnB;EAEAiB,WAAWA,CAACG,OAAe;IACzB,IAAI,CAACpB,KAAK,GAAGoB,OAAO;IACpBC,UAAU,CAAC,MAAM,IAAI,CAACF,SAAS,EAAE,EAAE,IAAI,CAAC;EAC1C;CACD;AArDYzB,oBAAoB,GAAA4B,UAAA,EALhC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACW/B,oBAAoB,CAqDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}