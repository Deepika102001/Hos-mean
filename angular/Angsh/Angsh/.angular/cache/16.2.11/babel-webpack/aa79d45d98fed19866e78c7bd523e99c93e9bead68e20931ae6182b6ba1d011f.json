{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction ApporveComponent_tr_25_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ApporveComponent_tr_25_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const row_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.change(row_r1));\n    });\n    i0.ɵɵtext(1, \"Approve\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApporveComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, ApporveComponent_tr_25_button_10_Template, 2, 0, \"button\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.appointmentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.doctorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.patientName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !row_r1.status);\n  }\n}\nexport class ApporveComponent {\n  constructor(http) {\n    this.http = http;\n    this.datas = [];\n  }\n  ngOnInit() {\n    this.loadAppoinment();\n  }\n  loadAppoinment() {\n    this.http.get('http://localhost:1111/appoinment').subscribe(response => {\n      console.log('im in');\n      this.datas = response;\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  change(data) {\n    console.log('rftgyuiop');\n    console.log(data);\n    const send = {\n      appointmentId: data.appointmentId,\n      doctorName: data.doctorName,\n      patientName: data.patientName,\n      status: true,\n      description: data.description\n    };\n    console.log(send);\n    this.http.put('http://localhost:1111/updateAppoint', send).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error('Error:', error);\n    });\n    // Assuming you want to reload the data after the change\n    this.loadAppoinment();\n  }\n  static #_ = this.ɵfac = function ApporveComponent_Factory(t) {\n    return new (t || ApporveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ApporveComponent,\n    selectors: [[\"app-approve\"]],\n    decls: 26,\n    vars: 1,\n    consts: [[\"id\", \"myTabs\", 1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"id\", \"postJobTab\", \"data-toggle\", \"tab\", \"href\", \"employerpage\", 1, \"nav-link\", \"active\"], [\"id\", \"postedJobsTab\", \"data-toggle\", \"tab\", \"href\", \"postedjobs\", 1, \"nav-link\"], [\"id\", \"logoutTab\", \"href\", \"\", 1, \"nav-link\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n    template: function ApporveComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n        i0.ɵɵtext(3, \"Post Job\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 3);\n        i0.ɵɵtext(6, \"Posted Jobs\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"li\", 1)(8, \"a\", 4);\n        i0.ɵɵtext(9, \"Logout\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"table\")(12, \"thead\")(13, \"tr\")(14, \"th\");\n        i0.ɵɵtext(15, \"appointmentId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"doctorName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"patientName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"status\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"tbody\");\n        i0.ɵɵtemplate(25, ApporveComponent_tr_25_Template, 11, 5, \"tr\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datas);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","ApporveComponent_tr_25_button_10_Template_button_click_0_listener","ɵɵrestoreView","_r5","row_r1","ɵɵnextContext","$implicit","ctx_r3","ɵɵresetView","change","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ApporveComponent_tr_25_button_10_Template","ɵɵadvance","ɵɵtextInterpolate","appointmentId","doctorName","patientName","description","ɵɵproperty","status","ApporveComponent","constructor","http","datas","ngOnInit","loadAppoinment","get","subscribe","response","console","log","error","data","send","put","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","ApporveComponent_Template","rf","ctx","ApporveComponent_tr_25_Template"],"sources":["C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\approve\\approve.component.ts","C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\approve\\approve.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-approve',\n  templateUrl: './approve.component.html',\n  styleUrls: ['./approve.component.css']\n})\nexport class ApporveComponent implements OnInit {\n  datas: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.loadAppoinment();\n  }\n\n  loadAppoinment() {\n    this.http.get<any[]>('http://localhost:1111/appoinment').subscribe(\n      (response) => {\n        console.log('im in');\n        this.datas = response;\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  change(data: any): void {\n    console.log('rftgyuiop');\n    console.log(data);\n\n    const send = {\n      appointmentId: data.appointmentId,\n      doctorName: data.doctorName,\n      patientName: data.patientName,\n      status: true,\n      description: data.description\n    };\n\n    console.log(send);\n\n    this.http.put('http://localhost:1111/updateAppoint', send).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n\n    // Assuming you want to reload the data after the change\n    this.loadAppoinment();\n  }\n}\n","<!-- apporve.component.html -->\n<ul class=\"nav nav-tabs\" id=\"myTabs\">\n  <li class=\"nav-item\">\n      <a class=\"nav-link active\" id=\"postJobTab\" data-toggle=\"tab\" href=\"employerpage\">Post Job</a>\n  </li>\n  <li class=\"nav-item\">\n      <a class=\"nav-link\" id=\"postedJobsTab\" data-toggle=\"tab\" href=\"postedjobs\">Posted Jobs</a>\n  </li>\n  <li class=\"nav-item\">\n      <a class=\"nav-link\" id=\"logoutTab\" href=\"\">Logout</a>\n  </li>\n</ul>\n<div>\n    <!-- <app-navigation></app-navigation> -->\n  \n    <table>\n      <thead>\n        <tr>\n          <th>appointmentId</th>\n          <th>doctorName</th>\n          <th>patientName</th>\n          <th>description</th>\n          <th>status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let row of datas\">\n          <td>{{ row.appointmentId }}</td>\n          <td>{{ row.doctorName }}</td>\n          <td>{{ row.patientName }}</td>\n          <td>{{ row.description }}</td>\n          <td>\n            <button *ngIf=\"!row.status\" (click)=\"change(row)\">Approve</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}