{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nexport let PharmamedicineComponent = class PharmamedicineComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.medicine = [];\n    this.isShowForm = false;\n    this.isNewMedicineAdded = false;\n    this.isEdit = false;\n    this.deleted = -1;\n  }\n  onSubmit() {\n    console.log(this.medicineForm.value);\n  }\n  onPriceChange(event) {\n    let value = event.target.value;\n    let currentPrice = value - value * 10 / 100;\n    this.medicineForm.controls['finalPrice'].setValue(currentPrice);\n  }\n  ngOnInit() {\n    this.fetchMedicineData();\n    this.medicineForm = this.formBuilder.group({\n      medicineName: new FormControl('', [Validators.required]),\n      dosage: new FormControl('', [Validators.required]),\n      price: new FormControl('', [Validators.required]),\n      gst: new FormControl(18, [Validators.required]),\n      discount: new FormControl(10, [Validators.required]),\n      finalPrice: new FormControl('', [Validators.required])\n    });\n  }\n  fetchMedicineData() {\n    this.http.get(\"http://localhost:1111/Medicine\").subscribe(response => {\n      this.medicine = response;\n      console.log('response= ', response);\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  onStore() {\n    let OriginalPrice = this.medicineForm.controls['price'].value;\n    if (this.isEdit) {\n      this.updateMedicine();\n    } else {\n      this.http.post(\"http://localhost:1111/newMedicine\", this.medicineForm.value).subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error('Error:', error);\n      });\n      this.fetchMedicineData();\n      this.isNewMedicineAdded = true;\n    }\n  }\n  onEdit(data) {\n    this.isEdit = true;\n    const formValues = {\n      medicineName: data.medicineName,\n      dosage: data.dosage,\n      price: data.price\n    };\n    this.medicineForm.patchValue(formValues);\n  }\n  updateMedicine() {\n    this.http.put(\"http://localhost:1111/updatemedicine\", this.medicineForm.value).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error('Error:', error);\n    });\n    this.fetchMedicineData();\n  }\n  onDelete(name) {\n    this.http.delete(`http://localhost:1111/deletemedicine/${name}`).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error('Error:', error);\n    });\n    this.fetchMedicineData();\n    this.deleted = -1;\n  }\n  addMethod() {\n    this.isShowForm = true;\n  }\n};\nPharmamedicineComponent = __decorate([Component({\n  selector: 'app-pharmamedicine',\n  templateUrl: './pharmamedicine.component.html',\n  styleUrls: ['./pharmamedicine.component.css']\n})], PharmamedicineComponent);","map":{"version":3,"names":["Component","Validators","FormControl","PharmamedicineComponent","constructor","formBuilder","http","medicine","isShowForm","isNewMedicineAdded","isEdit","deleted","onSubmit","console","log","medicineForm","value","onPriceChange","event","target","currentPrice","controls","setValue","ngOnInit","fetchMedicineData","group","medicineName","required","dosage","price","gst","discount","finalPrice","get","subscribe","response","error","onStore","OriginalPrice","updateMedicine","post","onEdit","data","formValues","patchValue","put","onDelete","name","delete","addMethod","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\biswa\\Desktop\\New folder\\Hos-mean\\angular\\Angsh\\Angsh\\src\\app\\Pharmacist\\pharmamedicine\\pharmamedicine.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-pharmamedicine',\r\n  templateUrl: './pharmamedicine.component.html',\r\n  styleUrls: ['./pharmamedicine.component.css']\r\n})\r\nexport class PharmamedicineComponent {\r\n\r\n  medicine: any[] = [];\r\n  isShowForm:boolean = false\r\n  isNewMedicineAdded:boolean = false\r\n  isEdit:boolean = false\r\n\r\n  medicineForm!: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,private http: HttpClient) {}\r\n  onSubmit() {\r\n    console.log(this.medicineForm.value);\r\n  }\r\n\r\n  deleted: number = -1;\r\n\r\n\r\n  onPriceChange(event:any){\r\n    let value= event.target.value\r\n    let currentPrice = value - (value * 10 / 100);\r\n    this.medicineForm.controls['finalPrice'].setValue(currentPrice)\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    this.fetchMedicineData();\r\n    this.medicineForm = this.formBuilder.group({\r\n      medicineName: new FormControl('',[Validators.required]),\r\n      dosage:  new FormControl('',[Validators.required]) ,\r\n      price:  new FormControl('',[Validators.required]),\r\n      gst: new FormControl(18,[Validators.required]),\r\n      discount: new FormControl(10,[Validators.required]),\r\n      finalPrice: new FormControl('',[Validators.required]),\r\n    });\r\n  }\r\n\r\n  fetchMedicineData(): void {\r\n    this.http.get<any[]>(\"http://localhost:1111/Medicine\")\r\n      .subscribe(response => {\r\n        this.medicine = response;\r\n        console.log('response= ',response);\r\n        \r\n      }, error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  onStore(){\r\n    let OriginalPrice = this.medicineForm.controls['price'].value\r\n    \r\n    if(this.isEdit){\r\n      this.updateMedicine()\r\n    }else{\r\n      this.http.post(\"http://localhost:1111/newMedicine\", this.medicineForm.value)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n      this.fetchMedicineData()\r\n      this.isNewMedicineAdded = true\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  onEdit(data:any){\r\n    this.isEdit = true\r\n    const formValues = {\r\n      medicineName:data.medicineName,\r\n      dosage:data.dosage,\r\n      price:data.price,\r\n    };\r\n\r\n    this.medicineForm.patchValue(formValues)\r\n  }\r\n\r\n  updateMedicine(){\r\n     this.http.put(\"http://localhost:1111/updatemedicine\", this.medicineForm.value)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.error('Error:', error);\r\n      });\r\n      this.fetchMedicineData()\r\n  }\r\n\r\n  onDelete(name:any){\r\n    this.http.delete(`http://localhost:1111/deletemedicine/${name}`)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.error('Error:', error);\r\n      });\r\n      this.fetchMedicineData()\r\n\r\n    this.deleted = -1;\r\n  }\r\n\r\n  addMethod(): void {\r\n    this.isShowForm = true\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}