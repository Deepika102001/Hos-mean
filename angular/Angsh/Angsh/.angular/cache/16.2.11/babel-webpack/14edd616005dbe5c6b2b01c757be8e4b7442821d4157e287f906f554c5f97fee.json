{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction BookComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.err);\n  }\n}\nexport class BookComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.name = '';\n    this.Doctor = '';\n    this.Dis = '';\n    this.err = null;\n  }\n  save() {\n    if (this.name) {\n      if (this.Doctor) {\n        if (this.Dis) {\n          this.http.get('http://localhost:1111/appoinment').subscribe(response => {\n            const id = response.length;\n            const data = {\n              appointmentId: id + 1,\n              doctorName: this.Doctor,\n              patientName: this.name,\n              status: false,\n              description: this.Dis\n            };\n            this.http.post('http://localhost:1111/newAppoinment', data).subscribe(response => {\n              console.log(response);\n              this.router.navigate(['/Apporve']);\n            }, error => {\n              console.error('Error:', error);\n            });\n          }, error => {\n            console.error('Error:', error);\n          });\n        } else {\n          this.handleError('Enter description');\n        }\n      } else {\n        this.handleError('Enter Doctor name');\n      }\n    } else {\n      this.handleError('Enter proper name');\n    }\n  }\n  hideSpam() {\n    this.err = null;\n  }\n  static #_ = this.ɵfac = function BookComponent_Factory(t) {\n    return new (t || BookComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookComponent,\n    selectors: [[\"app-book\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"bcontainer\"], [1, \"login\"], [\"type\", \"text\", \"placeholder\", \"Enter Name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", 1, \"description\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"class\", \"eror\", 4, \"ngIf\"], [1, \"eror\"]],\n    template: function BookComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"app-navigation\");\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"h1\");\n        i0.ɵɵtext(5, \"BOOK\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"doctorName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.Doctor = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.Dis = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function BookComponent_Template_button_click_15_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(16, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, BookComponent_p_17_Template, 2, 1, \"p\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.Doctor);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.Dis);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.err);\n      }\n    },\n    dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","err","BookComponent","constructor","router","http","name","Doctor","Dis","save","get","subscribe","response","id","length","data","appointmentId","doctorName","patientName","status","description","post","console","log","navigate","error","handleError","hideSpam","_","ɵɵdirectiveInject","i1","Router","i2","HttpClient","_2","selectors","decls","vars","consts","template","BookComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","BookComponent_Template_input_ngModelChange_8_listener","$event","BookComponent_Template_input_ngModelChange_11_listener","BookComponent_Template_input_ngModelChange_14_listener","BookComponent_Template_button_click_15_listener","ɵɵtemplate","BookComponent_p_17_Template","ɵɵproperty"],"sources":["C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\book\\book.component.ts","C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\book\\book.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent {\n  name: string = '';\n  Doctor: string = '';\n  Dis: string = '';\n  err: string | null = null;\n\n  constructor(private router: Router, private http: HttpClient) {}\n\n  save(): void {\n    if (this.name) {\n      if (this.Doctor) {\n        if (this.Dis) {\n          this.http.get<any[]>('http://localhost:1111/appoinment').subscribe(\n            (response) => {\n              const id = response.length;\n              const data = {\n                appointmentId: id + 1,\n                doctorName: this.Doctor,\n                patientName: this.name,\n                status: false,\n                description: this.Dis\n              };\n\n              this.http.post('http://localhost:1111/newAppoinment', data).subscribe(\n                (response) => {\n                  console.log(response);\n                  this.router.navigate(['/Apporve']);\n                },\n                (error) => {\n                  console.error('Error:', error);\n                }\n              );\n            },\n            (error) => {\n              console.error('Error:', error);\n            }\n          );\n        } else {\n          this.handleError('Enter description');\n        }\n      } else {\n        this.handleError('Enter Doctor name');\n      }\n    } else {\n      this.handleError('Enter proper name');\n    }\n  }\n\n  hideSpam(): void {\n    this.err = null;\n  }\n}","<!-- book.component.html -->\n\n<div>\n    <app-navigation></app-navigation>\n  \n    <div class=\"bcontainer\">\n      <div class=\"login\">\n        <h1>BOOK</h1>\n  \n        <p>name</p>\n        <input type=\"text\" [(ngModel)]=\"name\" placeholder=\"Enter Name\" />\n  \n        <p>doctorName</p>\n        <input type=\"text\" [(ngModel)]=\"Doctor\" placeholder=\"Enter Name\" />\n  \n        <p>description</p>\n        <input type=\"text\" [(ngModel)]=\"Dis\" class=\"description\" />\n  \n        <button (click)=\"save()\">Register</button>\n  \n        <p *ngIf=\"err\" class=\"eror\">{{ err }}</p>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}