{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nexport class DoctorLoginComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.email = '';\n    this.password = '';\n    this.onRecaptchaChange = false;\n  }\n  ngOnInit() {}\n  login() {\n    if (this.onRecaptchaChange) {\n      if (this.email) {\n        if (this.password) {\n          const data = {\n            email: this.email,\n            password: this.password,\n            role: 'Doctor'\n          };\n          this.http.post('http://localhost:1111/officialEmail/', data).subscribe(response => {\n            if (response) {\n              // Assuming the response structure is similar to your React code\n              this.router.navigate(['/DoctorDashboard']);\n            } else {\n              console.log('Invalid credentials');\n            }\n          }, error => {\n            console.error('Error:', error);\n          });\n        } else {\n          console.log('Enter Password');\n        }\n      } else {\n        console.log('Enter Email');\n      }\n    } else {\n      console.log('Verify Captcha');\n    }\n  }\n  static #_ = this.ɵfac = function DoctorLoginComponent_Factory(t) {\n    return new (t || DoctorLoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorLoginComponent,\n    selectors: [[\"app-doctorlogin\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"lcontainer\"], [1, \"login\"], [\"type\", \"email\", \"placeholder\", \"Enter value\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Enter Password\", 3, \"ngModel\", \"ngModelChange\"], [1, \"fpass\"], [1, \"div1\"], [3, \"click\"], [\"routerLink\", \"/DoctorRegister\"]],\n    template: function DoctorLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"LOGIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorLoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorLoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 4);\n        i0.ɵɵtext(11, \"forgot password ?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DoctorLoginComponent_Template_button_click_13_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"a\", 7)(16, \"button\");\n        i0.ɵɵtext(17, \"Register\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i1.RouterLink, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DoctorLoginComponent","constructor","router","http","email","password","onRecaptchaChange","ngOnInit","login","data","role","post","subscribe","response","navigate","console","log","error","_","i0","ɵɵdirectiveInject","i1","Router","i2","HttpClient","_2","selectors","decls","vars","consts","template","DoctorLoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DoctorLoginComponent_Template_input_ngModelChange_6_listener","$event","DoctorLoginComponent_Template_input_ngModelChange_9_listener","DoctorLoginComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Doctor\\doctorlogin\\doctorlogin.component.ts","C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Doctor\\doctorlogin\\doctorlogin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-doctorlogin',\n  templateUrl: './doctorlogin.component.html',\n  styleUrls: ['./doctorlogin.component.css']\n})\nexport class DoctorLoginComponent implements OnInit {\n  email: string = '';\n  password: string = '';\n  onRecaptchaChange: boolean = false;\n\n  constructor(private router: Router, private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  login(): void {\n    if (this.onRecaptchaChange) {\n      if (this.email) {\n        if (this.password) {\n          const data = {\n            email: this.email,\n            password: this.password,\n            role: 'Doctor'\n          };\n\n          this.http.post<any>('http://localhost:1111/officialEmail/', data)\n            .subscribe(\n              (response) => {\n                if (response) {\n                  // Assuming the response structure is similar to your React code\n                  this.router.navigate(['/DoctorDashboard']);\n                } else {\n                  console.log('Invalid credentials');\n                }\n              },\n              (error) => {\n                console.error('Error:', error);\n              }\n            );\n        } else {\n          console.log('Enter Password');\n        }\n      } else {\n        console.log('Enter Email');\n      }\n    } else {\n      console.log('Verify Captcha');\n    }\n  }\n}\n","<!-- doctor-login.component.html -->\n\n<div class=\"lcontainer\">\n    <div class=\"login\">\n      <h1>LOGIN</h1>\n  \n      <p>Email</p>\n      <input type=\"email\" [(ngModel)]=\"email\" placeholder=\"Enter value\" />\n  \n      <p>Password</p>\n      <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Enter Password\" />\n  \n      <p class=\"fpass\">forgot password ?</p>\n      <!-- Assuming you have Angular ReCAPTCHA library installed -->\n     \n  \n      <div class=\"div1\">\n        <button (click)=\"login()\">Login</button>\n        <a routerLink=\"/DoctorRegister\"><button>Register</button></a>\n      </div>\n    </div>\n  </div>\n  "],"mappings":";;;;AAQA,OAAM,MAAOA,oBAAoB;EAK/BC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAJhD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,iBAAiB,GAAY,KAAK;EAE6B;EAE/DC,QAAQA,CAAA,GAAU;EAElBC,KAAKA,CAAA;IACH,IAAI,IAAI,CAACF,iBAAiB,EAAE;MAC1B,IAAI,IAAI,CAACF,KAAK,EAAE;QACd,IAAI,IAAI,CAACC,QAAQ,EAAE;UACjB,MAAMI,IAAI,GAAG;YACXL,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBK,IAAI,EAAE;WACP;UAED,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,sCAAsC,EAAEF,IAAI,CAAC,CAC9DG,SAAS,CACPC,QAAQ,IAAI;YACX,IAAIA,QAAQ,EAAE;cACZ;cACA,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;aAC3C,MAAM;cACLC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;UAEtC,CAAC,EACAC,KAAK,IAAI;YACRF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAChC,CAAC,CACF;SACJ,MAAM;UACLF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;OAEhC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;;KAE7B,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;EAEjC;EAAC,QAAAE,CAAA,G;qBA1CUlB,oBAAoB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBzB,oBAAoB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCNjCb,EAAA,CAAAe,cAAA,aAAwB;QAEdf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEdjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QACZjB,EAAA,CAAAe,cAAA,eAAoE;QAAhDf,EAAA,CAAAkB,UAAA,2BAAAC,6DAAAC,MAAA;UAAA,OAAAN,GAAA,CAAA7B,KAAA,GAAAmC,MAAA;QAAA,EAAmB;QAAvCpB,EAAA,CAAAiB,YAAA,EAAoE;QAEpEjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,eAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QACfjB,EAAA,CAAAe,cAAA,eAA6E;QAAtDf,EAAA,CAAAkB,UAAA,2BAAAG,6DAAAD,MAAA;UAAA,OAAAN,GAAA,CAAA5B,QAAA,GAAAkC,MAAA;QAAA,EAAsB;QAA7CpB,EAAA,CAAAiB,YAAA,EAA6E;QAE7EjB,EAAA,CAAAe,cAAA,YAAiB;QAAAf,EAAA,CAAAgB,MAAA,yBAAiB;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAItCjB,EAAA,CAAAe,cAAA,cAAkB;QACRf,EAAA,CAAAkB,UAAA,mBAAAI,uDAAA;UAAA,OAASR,GAAA,CAAAzB,KAAA,EAAO;QAAA,EAAC;QAACW,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QACxCjB,EAAA,CAAAe,cAAA,YAAgC;QAAQf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAXvCjB,EAAA,CAAAuB,SAAA,GAAmB;QAAnBvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAA7B,KAAA,CAAmB;QAGhBe,EAAA,CAAAuB,SAAA,GAAsB;QAAtBvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAA5B,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}