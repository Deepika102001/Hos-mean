{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ApointmentComponent = class ApointmentComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.name = '';\n    this.Doctor = '';\n    this.Dis = '';\n    this.err = '';\n  }\n  ngOnInit() {}\n  save() {\n    if (this.name) {\n      if (this.Doctor) {\n        if (this.Dis) {\n          this.http.get('http://localhost:1111/appoinment').subscribe(response => {\n            const id = response.length;\n            const data = {\n              appointmentId: id + 1,\n              doctorName: this.Doctor,\n              patientName: this.name,\n              status: false,\n              description: this.Dis\n            };\n            this.http.post('http://localhost:1111/newAppoinment', data).subscribe(() => {\n              console.log('Data saved successfully');\n              this.router.navigate(['/userappointment']);\n            }, error => {\n              console.error('Error:', error);\n            });\n          }, error => {\n            console.error('Error:', error);\n          });\n        } else {\n          this.showError('Enter Dis');\n        }\n      } else {\n        this.showError('Enter Doctor name');\n      }\n    } else {\n      this.showError('Enter proper name');\n    }\n  }\n  hideError() {\n    this.err = null;\n  }\n  showError(message) {\n    this.err = message;\n    setTimeout(() => this.hideError(), 1000);\n  }\n};\nApointmentComponent = __decorate([Component({\n  selector: 'app-apointment',\n  templateUrl: './apointment.component.html',\n  styleUrls: ['./apointment.component.css']\n})], ApointmentComponent);","map":{"version":3,"names":["Component","ApointmentComponent","constructor","router","http","name","Doctor","Dis","err","ngOnInit","save","get","subscribe","response","id","length","data","appointmentId","doctorName","patientName","status","description","post","console","log","navigate","error","showError","hideError","message","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\User\\apointment\\apointment.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-apointment',\n  templateUrl: './apointment.component.html',\n  styleUrls: ['./apointment.component.css']\n})\nexport class ApointmentComponent {\n  name: string = '';\n  Doctor: string = '';\n  Dis: string = '';\n  err: string | null = '';\n  \n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit(): void {}\n\n  save(): void {\n    if (this.name) {\n      if (this.Doctor) {\n        if (this.Dis) {\n          this.http.get<any>('http://localhost:1111/appoinment').subscribe(\n            response => {\n              const id = response.length;\n              const data = {\n                appointmentId: id + 1,\n                doctorName: this.Doctor,\n                patientName: this.name,\n                status: false,\n                description: this.Dis\n              };\n\n              this.http.post('http://localhost:1111/newAppoinment', data).subscribe(\n                () => {\n                  console.log('Data saved successfully');\n                  this.router.navigate(['/userappointment']);\n                },\n                error => {\n                  console.error('Error:', error);\n                }\n              );\n            },\n            error => {\n              console.error('Error:', error);\n            }\n          );\n        } else {\n          this.showError('Enter Dis');\n        }\n      } else {\n        this.showError('Enter Doctor name');\n      }\n    } else {\n      this.showError('Enter proper name');\n    }\n  }\n\n  hideError(): void {\n    this.err = null;\n  }\n\n  private showError(message: string): void {\n    this.err = message;\n    setTimeout(() => this.hideError(), 1000);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9BC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IALhD,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,GAAG,GAAkB,EAAE;EAEyC;EAEhEC,QAAQA,CAAA,GAAU;EAElBC,IAAIA,CAAA;IACF,IAAI,IAAI,CAACL,IAAI,EAAE;MACb,IAAI,IAAI,CAACC,MAAM,EAAE;QACf,IAAI,IAAI,CAACC,GAAG,EAAE;UACZ,IAAI,CAACH,IAAI,CAACO,GAAG,CAAM,kCAAkC,CAAC,CAACC,SAAS,CAC9DC,QAAQ,IAAG;YACT,MAAMC,EAAE,GAAGD,QAAQ,CAACE,MAAM;YAC1B,MAAMC,IAAI,GAAG;cACXC,aAAa,EAAEH,EAAE,GAAG,CAAC;cACrBI,UAAU,EAAE,IAAI,CAACZ,MAAM;cACvBa,WAAW,EAAE,IAAI,CAACd,IAAI;cACtBe,MAAM,EAAE,KAAK;cACbC,WAAW,EAAE,IAAI,CAACd;aACnB;YAED,IAAI,CAACH,IAAI,CAACkB,IAAI,CAAC,qCAAqC,EAAEN,IAAI,CAAC,CAACJ,SAAS,CACnE,MAAK;cACHW,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;cACtC,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;YAC5C,CAAC,EACDC,KAAK,IAAG;cACNH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;YAChC,CAAC,CACF;UACH,CAAC,EACDA,KAAK,IAAG;YACNH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAChC,CAAC,CACF;SACF,MAAM;UACL,IAAI,CAACC,SAAS,CAAC,WAAW,CAAC;;OAE9B,MAAM;QACL,IAAI,CAACA,SAAS,CAAC,mBAAmB,CAAC;;KAEtC,MAAM;MACL,IAAI,CAACA,SAAS,CAAC,mBAAmB,CAAC;;EAEvC;EAEAC,SAASA,CAAA;IACP,IAAI,CAACpB,GAAG,GAAG,IAAI;EACjB;EAEQmB,SAASA,CAACE,OAAe;IAC/B,IAAI,CAACrB,GAAG,GAAGqB,OAAO;IAClBC,UAAU,CAAC,MAAM,IAAI,CAACF,SAAS,EAAE,EAAE,IAAI,CAAC;EAC1C;CACD;AA1DY3B,mBAAmB,GAAA8B,UAAA,EAL/B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWjC,mBAAmB,CA0D/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}