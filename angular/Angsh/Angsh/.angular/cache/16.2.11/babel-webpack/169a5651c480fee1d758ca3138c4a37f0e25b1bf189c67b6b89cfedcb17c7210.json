{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nexport class BookComponent {\n  constructor(fb, router, http) {\n    this.fb = fb;\n    this.router = router;\n    this.http = http;\n    this.err = null;\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      Doctor: ['', Validators.required],\n      Dis: ['', Validators.required]\n    });\n  }\n  save() {\n    if (this.form.valid) {\n      this.http.get('http://localhost:1111/appoinment').subscribe(response => {\n        const id = response.length;\n        const data = {\n          appointmentId: id + 1,\n          doctorName: this.form.value.Doctor,\n          patientName: this.form.value.name,\n          status: false,\n          description: this.form.value.Dis\n        };\n        this.http.post('http://localhost:1111/newAppoinment', data).subscribe(response => {\n          console.log(response);\n          this.router.navigate(['/Apporve']);\n        }, error => {\n          console.error('Error:', error);\n        });\n      }, error => {\n        console.error('Error:', error);\n      });\n    } else {\n      this.handleError('Please fill in all required fields.');\n    }\n  }\n  hideSpam() {\n    this.err = null;\n  }\n  handleError(message) {\n    this.err = message;\n    setTimeout(() => this.hideSpam(), 1000);\n  }\n  isFormValid() {\n    return this.form.valid;\n  }\n  static #_ = this.ɵfac = function BookComponent_Factory(t) {\n    return new (t || BookComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookComponent,\n    selectors: [[\"app-book\"]],\n    decls: 2,\n    vars: 0,\n    template: function BookComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"book works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","BookComponent","constructor","fb","router","http","err","form","group","name","required","Doctor","Dis","save","valid","get","subscribe","response","id","length","data","appointmentId","doctorName","value","patientName","status","description","post","console","log","navigate","error","handleError","hideSpam","message","setTimeout","isFormValid","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","HttpClient","_2","selectors","decls","vars","template","BookComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\book\\book.component.ts","C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\book\\book.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\n\n  export class BookComponent {\n    form: FormGroup;\n    err: string | null = null;\nname: any;\nDoctor: any;\nDis: any;\n  \n    constructor(private fb: FormBuilder, private router: Router, private http: HttpClient) {\n      this.form = this.fb.group({\n        name: ['', Validators.required],\n        Doctor: ['', Validators.required],\n        Dis: ['', Validators.required]\n      });\n    }\n  \n    save(): void {\n      if (this.form.valid) {\n        this.http.get<any[]>('http://localhost:1111/appoinment').subscribe(\n          (response) => {\n            const id = response.length;\n            const data = {\n              appointmentId: id + 1,\n              doctorName: this.form.value.Doctor,\n              patientName: this.form.value.name,\n              status: false,\n              description: this.form.value.Dis\n            };\n  \n            this.http.post('http://localhost:1111/newAppoinment', data).subscribe(\n              (response) => {\n                console.log(response);\n                this.router.navigate(['/Apporve']);\n              },\n              (error) => {\n                console.error('Error:', error);\n              }\n            );\n          },\n          (error) => {\n            console.error('Error:', error);\n          }\n        );\n      } else {\n        this.handleError('Please fill in all required fields.');\n      }\n    }\n  \n    hideSpam(): void {\n      this.err = null;\n    }\n  \n    handleError(message: string): void {\n      this.err = message;\n      setTimeout(() => this.hideSpam(), 1000);\n    }\n  \n    isFormValid(): boolean {\n      return this.form.valid;\n    }\n  }","<p>book works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUjE,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,EAAe,EAAUC,MAAc,EAAUC,IAAgB;IAAjE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IALzE,KAAAC,GAAG,GAAkB,IAAI;IAMvB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACxBC,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAC/BC,MAAM,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MACjCE,GAAG,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ;KAC9B,CAAC;EACJ;EAEAG,IAAIA,CAAA;IACF,IAAI,IAAI,CAACN,IAAI,CAACO,KAAK,EAAE;MACnB,IAAI,CAACT,IAAI,CAACU,GAAG,CAAQ,kCAAkC,CAAC,CAACC,SAAS,CAC/DC,QAAQ,IAAI;QACX,MAAMC,EAAE,GAAGD,QAAQ,CAACE,MAAM;QAC1B,MAAMC,IAAI,GAAG;UACXC,aAAa,EAAEH,EAAE,GAAG,CAAC;UACrBI,UAAU,EAAE,IAAI,CAACf,IAAI,CAACgB,KAAK,CAACZ,MAAM;UAClCa,WAAW,EAAE,IAAI,CAACjB,IAAI,CAACgB,KAAK,CAACd,IAAI;UACjCgB,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE,IAAI,CAACnB,IAAI,CAACgB,KAAK,CAACX;SAC9B;QAED,IAAI,CAACP,IAAI,CAACsB,IAAI,CAAC,qCAAqC,EAAEP,IAAI,CAAC,CAACJ,SAAS,CAClEC,QAAQ,IAAI;UACXW,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;UACrB,IAAI,CAACb,MAAM,CAAC0B,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,EACAC,KAAK,IAAI;UACRH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC,CAAC,CACF;MACH,CAAC,EACAA,KAAK,IAAI;QACRH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,CACF;KACF,MAAM;MACL,IAAI,CAACC,WAAW,CAAC,qCAAqC,CAAC;;EAE3D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAC3B,GAAG,GAAG,IAAI;EACjB;EAEA0B,WAAWA,CAACE,OAAe;IACzB,IAAI,CAAC5B,GAAG,GAAG4B,OAAO;IAClBC,UAAU,CAAC,MAAM,IAAI,CAACF,QAAQ,EAAE,EAAE,IAAI,CAAC;EACzC;EAEAG,WAAWA,CAAA;IACT,OAAO,IAAI,CAAC7B,IAAI,CAACO,KAAK;EACxB;EAAC,QAAAuB,CAAA,G;qBA1DUpC,aAAa,EAAAqC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb7C,aAAa;IAAA8C,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX5Bd,EAAA,CAAAgB,cAAA,QAAG;QAAAhB,EAAA,CAAAiB,MAAA,kBAAW;QAAAjB,EAAA,CAAAkB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}