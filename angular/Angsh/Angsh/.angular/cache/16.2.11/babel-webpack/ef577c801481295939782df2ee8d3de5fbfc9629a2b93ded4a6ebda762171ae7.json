{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nexport let PharmamedicineComponent = class PharmamedicineComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.medicine = [];\n    this.isShowForm = false;\n    this.isNewMedicineAdded = false;\n    this.deleted = -1;\n  }\n  onSubmit() {\n    console.log(this.medicineForm.value);\n  }\n  onPriceChange(event) {\n    let value = event.target.value;\n    let currentPrice = value - value * 10 / 100;\n    this.medicineForm.controls['finalPrice'].setValue(currentPrice);\n  }\n  onStore() {\n    let OriginalPrice = this.medicineForm.controls['price'].value;\n    this.http.post(\"http://localhost:1111/newMedicine\", this.medicineForm.value).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error('Error:', error);\n    });\n    this.fetchMedicineData();\n    this.isNewMedicineAdded = true;\n  }\n  ngOnInit() {\n    this.fetchMedicineData();\n    this.medicineForm = this.formBuilder.group({\n      medicineName: new FormControl('', [Validators.required]),\n      dosage: new FormControl('', [Validators.required]),\n      price: new FormControl('', [Validators.required]),\n      gst: new FormControl(18, [Validators.required]),\n      discount: new FormControl(10, [Validators.required]),\n      finalPrice: new FormControl('', [Validators.required])\n    });\n  }\n  fetchMedicineData() {\n    this.http.get(\"http://localhost:1111/Medicine\").subscribe(response => {\n      this.medicine = response;\n      console.log('response= ', response);\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  addMethod() {\n    this.isShowForm = true;\n  }\n  newMedicine() {\n    // this.http.post(\"http://localhost:1111/newMedicine\", send)\n    //   .subscribe(response => {\n    //     console.log(response);\n    //   }, error => {\n    //     console.error('Error:', error);\n    //   });\n  }\n  edit(i) {}\n  save() {\n    const send = {};\n    this.http.put(\"http://localhost:1111/updatemedicine\", send).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  delete(i) {\n    this.deleted = i;\n    const medicineName = this.medicine[i].medicineName;\n    this.http.delete(`http://localhost:1111/deletemedicine/${medicineName}`).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error('Error:', error);\n    });\n    this.deleted = -1;\n  }\n};\nPharmamedicineComponent = __decorate([Component({\n  selector: 'app-pharmamedicine',\n  templateUrl: './pharmamedicine.component.html',\n  styleUrls: ['./pharmamedicine.component.css']\n})], PharmamedicineComponent);","map":{"version":3,"names":["Component","Validators","FormControl","PharmamedicineComponent","constructor","formBuilder","http","medicine","isShowForm","isNewMedicineAdded","deleted","onSubmit","console","log","medicineForm","value","onPriceChange","event","target","currentPrice","controls","setValue","onStore","OriginalPrice","post","subscribe","response","error","fetchMedicineData","ngOnInit","group","medicineName","required","dosage","price","gst","discount","finalPrice","get","addMethod","newMedicine","edit","i","save","send","put","delete","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\karth\\Desktop\\Angsh\\src\\app\\Pharmacist\\pharmamedicine\\pharmamedicine.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-pharmamedicine',\n  templateUrl: './pharmamedicine.component.html',\n  styleUrls: ['./pharmamedicine.component.css']\n})\nexport class PharmamedicineComponent {\n\n  medicine: any[] = [];\n  isShowForm:boolean = false\n  isNewMedicineAdded:boolean = false\n\n  medicineForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,private http: HttpClient) {}\n  onSubmit() {\n    console.log(this.medicineForm.value);\n  }\n\n  deleted: number = -1;\n\n\n  onPriceChange(event:any){\n    let value= event.target.value\n    let currentPrice = value - (value * 10 / 100);\n    this.medicineForm.controls['finalPrice'].setValue(currentPrice)\n  }\n  onStore(){\n    let OriginalPrice = this.medicineForm.controls['price'].value\n    \n     this.http.post(\"http://localhost:1111/newMedicine\", this.medicineForm.value)\n      .subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error('Error:', error);\n      });\n\n      this.fetchMedicineData()\n      this.isNewMedicineAdded = true\n  }\n  ngOnInit(): void {\n    this.fetchMedicineData();\n    this.medicineForm = this.formBuilder.group({\n      medicineName: new FormControl('',[Validators.required]),\n      dosage:  new FormControl('',[Validators.required]) ,\n      price:  new FormControl('',[Validators.required]),\n      gst: new FormControl(18,[Validators.required]),\n      discount: new FormControl(10,[Validators.required]),\n      finalPrice: new FormControl('',[Validators.required]),\n    });\n  }\n\n  fetchMedicineData(): void {\n    this.http.get<any[]>(\"http://localhost:1111/Medicine\")\n      .subscribe(response => {\n        this.medicine = response;\n        console.log('response= ',response);\n        \n      }, error => {\n        console.error('Error:', error);\n      });\n      \n  }\n\n  addMethod(): void {\n    this.isShowForm = true\n  }\n\n  newMedicine(): void {\n  \n\n    // this.http.post(\"http://localhost:1111/newMedicine\", send)\n    //   .subscribe(response => {\n    //     console.log(response);\n    //   }, error => {\n    //     console.error('Error:', error);\n    //   });\n\n   \n  }\n\n  edit(i: number): void {\n   \n  }\n\n  save(): void {\n    const send = {\n     \n    };\n\n    this.http.put(\"http://localhost:1111/updatemedicine\", send)\n      .subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error('Error:', error);\n      });\n\n   \n  }\n\n  delete(i: number): void {\n    this.deleted = i;\n    const medicineName = this.medicine[i].medicineName;\n\n    this.http.delete(`http://localhost:1111/deletemedicine/${medicineName}`)\n      .subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error('Error:', error);\n      });\n\n    this.deleted = -1;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}