{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction DoctorProfileComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\\n\");\n  }\n}\nfunction DoctorProfileComponent_div_14_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.doctorDetails.name, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.doctorDetails.email, \"\");\n  }\n}\nfunction DoctorProfileComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h2\");\n    i0.ɵɵtext(2, \"Doctor Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, DoctorProfileComponent_div_14_div_3_Template, 9, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.doctorDetails);\n  }\n}\nexport class DoctorProfileComponent {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n    this.doctorEmail = null;\n    this.doctorDetails = {};\n    this.errorMessage = null;\n  }\n  ngOnInit() {\n    // Retrieve email from session storage\n    this.doctorEmail = sessionStorage.getItem('loggedInUserEmail');\n    if (this.doctorEmail) {\n      // Get doctor details using the stored email\n      this.getDoctorDetails();\n    } else {\n      this.errorMessage = 'No logged-in user found';\n    }\n  }\n  getDoctorDetails() {\n    this.http.get(`http://localhost:1111/getDoctorByEmail/${this.doctorEmail}`).subscribe(response => {\n      this.doctorDetails = response.doctor;\n    }, error => {\n      this.errorMessage = error.error.message || 'Something went wrong.';\n    });\n  }\n  static #_ = this.ɵfac = function DoctorProfileComponent_Factory(t) {\n    return new (t || DoctorProfileComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorProfileComponent,\n    selectors: [[\"app-doctorprofile\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[\"id\", \"myTabs\", 1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"id\", \"docappointment\", \"data-toggle\", \"tab\", \"href\", \"docappointment\", 1, \"nav-link\"], [\"id\", \"docmedicine\", \"data-toggle\", \"tab\", \"href\", \"docmedicine\", 1, \"nav-link\"], [\"id\", \"doctorprofile\", \"data-toggle\", \"tab\", \"href\", \"doctorprofile\", 1, \"nav-link\", \"active\"], [\"id\", \"\", \"href\", \"\", 1, \"nav-link\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"class\", \"doctor-details-container\", 4, \"ngIf\"], [1, \"error-message\"], [1, \"doctor-details-container\"], [\"class\", \"doctor-details\", 4, \"ngIf\"], [1, \"doctor-details\"]],\n    template: function DoctorProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n        i0.ɵɵtext(3, \"Appointment\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 3);\n        i0.ɵɵtext(6, \"Medicine\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"li\", 1)(8, \"a\", 4);\n        i0.ɵɵtext(9, \"Profile\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"li\", 1)(11, \"a\", 5);\n        i0.ɵɵtext(12, \"Logout\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, DoctorProfileComponent_div_13_Template, 2, 1, \"div\", 6);\n        i0.ɵɵtemplate(14, DoctorProfileComponent_div_14_Template, 4, 1, \"div\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.NgIf],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 629:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(44:5) C:\\\\\\\\Users\\\\\\\\biswa\\\\\\\\Desktop\\\\\\\\New folder\\\\\\\\Hos-mean\\\\\\\\angular\\\\\\\\Angsh\\\\\\\\Angsh\\\\\\\\src\\\\\\\\app\\\\\\\\Doctor\\\\\\\\doctorprofile\\\\\\\\doctorprofile.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 42 | \\\\u001b[39m    margin-top\\\\u001b[33m:\\\\u001b[39m 60px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 43 | \\\\u001b[39m    width\\\\u001b[33m:\\\\u001b[39m 50%\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 44 | \\\\u001b[39m    items\\\\n \\\\u001b[90m    | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 45 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 46 | \\\\u001b[39m  \\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[629]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=doctorprofile.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","ctx_r2","doctorDetails","name","email","ɵɵtemplate","DoctorProfileComponent_div_14_div_3_Template","ɵɵproperty","ctx_r1","DoctorProfileComponent","constructor","route","http","doctorEmail","ngOnInit","sessionStorage","getItem","getDoctorDetails","get","subscribe","response","doctor","error","message","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","_2","selectors","decls","vars","consts","template","DoctorProfileComponent_Template","rf","ctx","DoctorProfileComponent_div_13_Template","DoctorProfileComponent_div_14_Template"],"sources":["C:\\Users\\biswa\\Desktop\\New folder\\Hos-mean\\angular\\Angsh\\Angsh\\src\\app\\Doctor\\doctorprofile\\doctorprofile.component.ts","C:\\Users\\biswa\\Desktop\\New folder\\Hos-mean\\angular\\Angsh\\Angsh\\src\\app\\Doctor\\doctorprofile\\doctorprofile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-doctorprofile',\r\n  templateUrl: './doctorprofile.component.html',\r\n  styleUrls: ['./doctorprofile.component.css']\r\n})\r\nexport class DoctorProfileComponent implements OnInit {\r\n  doctorEmail: string | null = null;\r\n  doctorDetails: any = {};\r\n  errorMessage: string | null = null;\r\n\r\n  constructor(private route: ActivatedRoute, private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    // Retrieve email from session storage\r\n    this.doctorEmail = sessionStorage.getItem('loggedInUserEmail');\r\n\r\n    if (this.doctorEmail) {\r\n      // Get doctor details using the stored email\r\n      this.getDoctorDetails();\r\n    } else {\r\n      this.errorMessage = 'No logged-in user found';\r\n    }\r\n  }\r\n\r\n  getDoctorDetails(): void {\r\n    this.http.get(`http://localhost:1111/getDoctorByEmail/${this.doctorEmail}`)\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.doctorDetails = response.doctor;\r\n        },\r\n        (error: any) => {\r\n          this.errorMessage = error.error.message || 'Something went wrong.';\r\n        }\r\n      );\r\n  }\r\n}\r\n","<ul class=\"nav nav-tabs\" id=\"myTabs\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"docappointment\" data-toggle=\"tab\" href=\"docappointment\">Appointment</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"docmedicine\" data-toggle=\"tab\" href=\"docmedicine\">Medicine</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"doctorprofile\" data-toggle=\"tab\" href=\"doctorprofile\">Profile</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" id=\"\" href=\"\">Logout</a>\r\n  </li>\r\n</ul>\r\n\r\n<div *ngIf=\"errorMessage\" class=\"error-message\">\r\n  {{ errorMessage }}\r\n</div>\r\n\r\n<div *ngIf=\"!errorMessage\" class=\"doctor-details-container\">\r\n  <h2>Doctor Details</h2>\r\n  <div *ngIf=\"doctorDetails\" class=\"doctor-details\">\r\n    <p><strong>Name:</strong> {{ doctorDetails.name }}</p>\r\n    <p><strong>Email:</strong> {{ doctorDetails.email }}</p>\r\n    <!-- Display other doctor details as needed -->\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}