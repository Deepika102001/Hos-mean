{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.name = '';\n    this.Doctor = '';\n    this.Dis = '';\n    this.err = null;\n  }\n  save() {\n    if (this.name) {\n      if (this.Doctor) {\n        if (this.Dis) {\n          this.http.get('http://localhost:1111/appoinment').subscribe(response => {\n            const id = response.length;\n            const data = {\n              appointmentId: id + 1,\n              doctorName: this.Doctor,\n              patientName: this.name,\n              status: false,\n              description: this.Dis\n            };\n            this.http.post('http://localhost:1111/newAppoinment', data).subscribe(response => {\n              console.log(response);\n              this.router.navigate(['/Apporve']);\n            }, error => {\n              console.error('Error:', error);\n            });\n          }, error => {\n            console.error('Error:', error);\n          });\n        } else {\n          this.handleError('Enter description');\n        }\n      } else {\n        this.handleError('Enter Doctor name');\n      }\n    } else {\n      this.handleError('Enter proper name');\n    }\n  }\n  hideSpam() {\n    this.err = null;\n  }\n  handleError(message) {\n    this.err = message;\n    setTimeout(() => this.hideSpam(), 1000);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","router","http","name","Doctor","Dis","err","save","get","subscribe","response","id","length","data","appointmentId","doctorName","patientName","status","description","post","console","log","navigate","error","handleError","hideSpam","message","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Bellamkonda Sravani\\Desktop\\Hospital Management\\hospital\\src\\app\\Front-office\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  name: string = '';\n  Doctor: string = '';\n  Dis: string = '';\n  err: string | null = null;\nemail: any;\npassword: any;\n\n  constructor(private router: Router, private http: HttpClient) {}\n\n  save(): void {\n    if (this.name) {\n      if (this.Doctor) {\n        if (this.Dis) {\n          this.http.get<any[]>('http://localhost:1111/appoinment').subscribe(\n            (response) => {\n              const id = response.length;\n              const data = {\n                appointmentId: id + 1,\n                doctorName: this.Doctor,\n                patientName: this.name,\n                status: false,\n                description: this.Dis\n              };\n\n              this.http.post('http://localhost:1111/newAppoinment', data).subscribe(\n                (response) => {\n                  console.log(response);\n                  this.router.navigate(['/Apporve']);\n                },\n                (error) => {\n                  console.error('Error:', error);\n                }\n              );\n            },\n            (error) => {\n              console.error('Error:', error);\n            }\n          );\n        } else {\n          this.handleError('Enter description');\n        }\n      } else {\n        this.handleError('Enter Doctor name');\n      }\n    } else {\n      this.handleError('Enter proper name');\n    }\n  }\n\n  hideSpam(): void {\n    this.err = null;\n  }\n\n  handleError(message: string): void {\n    this.err = message;\n    setTimeout(() => this.hideSpam(), 1000);\n  }\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAS5BC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAPhD,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,GAAG,GAAkB,IAAI;EAIsC;EAE/DC,IAAIA,CAAA;IACF,IAAI,IAAI,CAACJ,IAAI,EAAE;MACb,IAAI,IAAI,CAACC,MAAM,EAAE;QACf,IAAI,IAAI,CAACC,GAAG,EAAE;UACZ,IAAI,CAACH,IAAI,CAACM,GAAG,CAAQ,kCAAkC,CAAC,CAACC,SAAS,CAC/DC,QAAQ,IAAI;YACX,MAAMC,EAAE,GAAGD,QAAQ,CAACE,MAAM;YAC1B,MAAMC,IAAI,GAAG;cACXC,aAAa,EAAEH,EAAE,GAAG,CAAC;cACrBI,UAAU,EAAE,IAAI,CAACX,MAAM;cACvBY,WAAW,EAAE,IAAI,CAACb,IAAI;cACtBc,MAAM,EAAE,KAAK;cACbC,WAAW,EAAE,IAAI,CAACb;aACnB;YAED,IAAI,CAACH,IAAI,CAACiB,IAAI,CAAC,qCAAqC,EAAEN,IAAI,CAAC,CAACJ,SAAS,CAClEC,QAAQ,IAAI;cACXU,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;cACrB,IAAI,CAACT,MAAM,CAACqB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;YACpC,CAAC,EACAC,KAAK,IAAI;cACRH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;YAChC,CAAC,CACF;UACH,CAAC,EACAA,KAAK,IAAI;YACRH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAChC,CAAC,CACF;SACF,MAAM;UACL,IAAI,CAACC,WAAW,CAAC,mBAAmB,CAAC;;OAExC,MAAM;QACL,IAAI,CAACA,WAAW,CAAC,mBAAmB,CAAC;;KAExC,MAAM;MACL,IAAI,CAACA,WAAW,CAAC,mBAAmB,CAAC;;EAEzC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACnB,GAAG,GAAG,IAAI;EACjB;EAEAkB,WAAWA,CAACE,OAAe;IACzB,IAAI,CAACpB,GAAG,GAAGoB,OAAO;IAClBC,UAAU,CAAC,MAAM,IAAI,CAACF,QAAQ,EAAE,EAAE,IAAI,CAAC;EACzC;CACD;AA3DY1B,iBAAiB,GAAA6B,UAAA,EAL7B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWhC,iBAAiB,CA2D7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}